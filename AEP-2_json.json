{
  "AEP-2": {
    "summary": "Implement Authentication APIs",
    "description": "As a user I want to log in securely so that I can access my personalized dashboard.",
    "acceptance_criteria": [
      "Login and registration APIs created",
      "JWT/session tokens issued after authentication",
      "Invalid login attempts return error messages",
      "API passes unit tests"
    ],
    "subtasks": [
      "Create login API",
      "Create registration API",
      "Implement JWT/session handling",
      "Write API test cases"
    ],
    "api_endpoints": {
      "login": {
        "path": "/api/auth/login",
        "method": "POST",
        "request": {
          "email": {
            "type": "string",
            "required": true,
            "validation": "email_format"
          },
          "password": {
            "type": "string",
            "required": true,
            "min_length": 8
          }
        },
        "response_success": {
          "status": "success",
          "token": "jwt_token_string",
          "refresh_token": "refresh_token_string",
          "user": {
            "id": "user_id",
            "email": "user_email",
            "name": "user_name"
          }
        },
        "response_error": {
          "status": "error",
          "message": "Invalid credentials",
          "code": "AUTH_001"
        }
      },
      "register": {
        "path": "/api/auth/register",
        "method": "POST",
        "request": {
          "email": {
            "type": "string",
            "required": true,
            "validation": "email_format"
          },
          "password": {
            "type": "string",
            "required": true,
            "min_length": 8,
            "validation": "password_strength"
          },
          "name": {
            "type": "string",
            "required": true,
            "min_length": 2
          }
        },
        "response_success": {
          "status": "success",
          "message": "User registered successfully",
          "user": {
            "id": "user_id",
            "email": "user_email",
            "name": "user_name"
          }
        },
        "response_error": {
          "status": "error",
          "message": "Email already exists",
          "code": "AUTH_002"
        }
      },
      "refresh": {
        "path": "/api/auth/refresh",
        "method": "POST",
        "request": {
          "refresh_token": {
            "type": "string",
            "required": true
          }
        },
        "response_success": {
          "status": "success",
          "token": "new_jwt_token_string"
        },
        "response_error": {
          "status": "error",
          "message": "Invalid refresh token",
          "code": "AUTH_003"
        }
      }
    },
    "jwt_config": {
      "secret_key": "env.JWT_SECRET",
      "algorithm": "HS256",
      "access_token_expiry": "15m",
      "refresh_token_expiry": "7d"
    },
    "error_codes": {
      "AUTH_001": "Invalid login credentials",
      "AUTH_002": "Email already registered",
      "AUTH_003": "Invalid refresh token",
      "AUTH_004": "Token expired",
      "AUTH_005": "Invalid token format"
    },
    "security": {
      "password_hashing": "bcrypt",
      "salt_rounds": 12,
      "rate_limiting": {
        "login_attempts": 5,
        "lockout_duration": "15 minutes"
      }
    },
    "validation_rules": {
      "email_format": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "password_strength": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
    },
    "logging": {
      "level": "info",
      "events": [
        "login_attempt",
        "login_success",
        "login_failure",
        "registration",
        "token_refresh"
      ]
    },
    "test_cases": {
      "login_success": {
        "email": "test@example.com",
        "password": "ValidPass123!"
      },
      "login_failure": {
        "email": "test@example.com",
        "password": "wrongpassword"
      },
      "registration_success": {
        "email": "newuser@example.com",
        "password": "NewPass123!",
        "name": "Test User"
      },
      "registration_failure": {
        "email": "existing@example.com",
        "password": "Short1!",
        "name": "T"
      }
    }
  }
}