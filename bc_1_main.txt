<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Number Addition Calculator</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .calculator-container {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 400px;
            text-align: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
            font-size: 28px;
            font-weight: 600;
        }

        .input-group {
            margin-bottom: 20px;
            text-align: left;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            font-weight: 500;
        }

        input[type="number"] {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        input[type="number"]:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        input[type="number"].error {
            border-color: #e74c3c;
        }

        .error-message {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            min-height: 20px;
        }

        button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            width: 100%;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        button:active {
            transform: translateY(0);
        }

        .result-container {
            margin-top: 25px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }

        .result-label {
            color: #555;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .result-value {
            font-size: 24px;
            font-weight: 600;
            color: #333;
        }

        @media (max-width: 480px) {
            .calculator-container {
                padding: 20px;
                margin: 10px;
            }
            
            h1 {
                font-size: 24px;
            }
            
            input[type="number"] {
                padding: 10px;
            }
            
            button {
                padding: 10px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="calculator-container">
        <h1>Number Addition Calculator</h1>
        
        <form id="addition-form">
            <div class="input-group">
                <label for="number1">First Number:</label>
                <input type="number" id="number1" step="any" placeholder="Enter first number" required>
                <div class="error-message" id="error1"></div>
            </div>
            
            <div class="input-group">
                <label for="number2">Second Number:</label>
                <input type="number" id="number2" step="any" placeholder="Enter second number" required>
                <div class="error-message" id="error2"></div>
            </div>
            
            <button type="submit">Add Numbers</button>
        </form>
        
        <div class="result-container">
            <div class="result-label">Result:</div>
            <div class="result-value" id="result">-</div>
        </div>
    </div>

    <script>
        class AdditionCalculator {
            constructor() {
                this.form = document.getElementById('addition-form');
                this.number1Input = document.getElementById('number1');
                this.number2Input = document.getElementById('number2');
                this.error1Element = document.getElementById('error1');
                this.error2Element = document.getElementById('error2');
                this.resultElement = document.getElementById('result');
                
                this.initializeEventListeners();
            }
            
            initializeEventListeners() {
                this.form.addEventListener('submit', (e) => this.handleSubmit(e));
                
                // Real-time validation
                this.number1Input.addEventListener('input', () => this.validateInput(this.number1Input, this.error1Element));
                this.number2Input.addEventListener('input', () => this.validateInput(this.number2Input, this.error2Element));
            }
            
            validateInput(inputElement, errorElement) {
                const value = inputElement.value.trim();
                
                if (value === '') {
                    inputElement.classList.remove('error');
                    errorElement.textContent = '';
                    return true;
                }
                
                if (isNaN(value) || value === null) {
                    inputElement.classList.add('error');
                    errorElement.textContent = 'Please enter a valid number';
                    return false;
                }
                
                inputElement.classList.remove('error');
                errorElement.textContent = '';
                return true;
            }
            
            addNumbers(num1, num2) {
                // Convert to numbers and handle floating point precision
                const number1 = parseFloat(num1);
                const number2 = parseFloat(num2);
                
                // Handle edge cases and ensure numeric addition
                return number1 + number2;
            }
            
            handleSubmit(event) {
                event.preventDefault();
                
                const num1 = this.number1Input.value.trim();
                const num2 = this.number2Input.value.trim();
                
                // Validate both inputs
                const isValid1 = this.validateInput(this.number1Input, this.error1Element);
                const isValid2 = this.validateInput(this.number2Input, this.error2Element);
                
                if (!isValid1 || !isValid2) {
                    this.resultElement.textContent = 'Please fix the errors above';
                    this.resultElement.style.color = '#e74c3c';
                    return;
                }
                
                if (num1 === '' || num2 === '') {
                    this.resultElement.textContent = 'Please enter both numbers';
                    this.resultElement.style.color = '#e74c3c';
                    return;
                }
                
                // Perform addition
                try {
                    const result = this.addNumbers(num1, num2);
                    this.displayResult(result);
                } catch (error) {
                    this.resultElement.textContent = 'Error in calculation';
                    this.resultElement.style.color = '#e74c3c';
                    console.error('Addition error:', error);
                }
            }
            
            displayResult(result) {
                this.resultElement.textContent = result;
                this.resultElement.style.color = '#333';
                
                // Add animation effect
                this.resultElement.style.transition = 'all 0.3s ease';
                this.resultElement.style.transform = 'scale(1.1)';
                
                setTimeout(() => {
                    this.resultElement.style.transform = 'scale(1)';
                }, 300);
            }
        }
        
        // Initialize the calculator when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            new AdditionCalculator();
        });
    </script>
</body>
</html>