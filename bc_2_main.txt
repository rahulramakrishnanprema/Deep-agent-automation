"""
Main module for the subtraction calculator system.
Provides both web interface and backend processing for subtraction operations.
"""

import sys
import json
from typing import Union, Optional, Dict, Any
from dataclasses import dataclass
from http.server import HTTPServer, BaseHTTPRequestHandler
import cgi

class SubtractionCalculator:
    """
    A calculator class that handles subtraction operations with input validation.
    """
    
    @staticmethod
    def subtract_numbers(num1: Union[int, float], num2: Union[int, float]) -> Union[int, float]:
        """
        Subtract two numbers and return the result.
        
        Args:
            num1: First number (minuend)
            num2: Second number (subtrahend)
            
        Returns:
            The result of num1 - num2
            
        Raises:
            TypeError: If inputs are not numbers
        """
        if not isinstance(num1, (int, float)) or not isinstance(num2, (int, float)):
            raise TypeError("Both inputs must be numbers")
        
        return num1 - num2

class InputValidator:
    """
    Validates user input for subtraction operations.
    """
    
    @staticmethod
    def validate_input(input_str: str) -> Optional[Union[int, float]]:
        """
        Validate and convert input string to number.
        
        Args:
            input_str: String input to validate
            
        Returns:
            Converted number (int or float) or None if invalid
        """
        if not input_str.strip():
            return None
            
        try:
            # Try to convert to int first
            return int(input_str)
        except ValueError:
            try:
                # If not int, try float
                return float(input_str)
            except ValueError:
                return None

@dataclass
class SubtractionRequest:
    """Data class representing a subtraction request."""
    num1: Union[int, float]
    num2: Union[int, float]
    
    @classmethod
    def from_dict(cls, data: Dict[str, Any]) -> 'SubtractionRequest':
        """Create SubtractionRequest from dictionary."""
        return cls(
            num1=data.get('num1', 0),
            num2=data.get('num2', 0)
        )

@dataclass
class SubtractionResponse:
    """Data class representing a subtraction response."""
    result: Union[int, float]
    error: Optional[str] = None
    success: bool = True
    
    def to_dict(self) -> Dict[str, Any]:
        """Convert response to dictionary."""
        return {
            'result': self.result,
            'error': self.error,
            'success': self.success
        }

class SubtractionHandler:
    """
    Handles subtraction operations with proper error handling.
    """
    
    def __init__(self):
        self.calculator = SubtractionCalculator()
        self.validator = InputValidator()
    
    def process_subtraction(self, request: SubtractionRequest) -> SubtractionResponse:
        """
        Process subtraction request with validation.
        
        Args:
            request: SubtractionRequest object
            
        Returns:
            SubtractionResponse with result or error
        """
        try:
            result = self.calculator.subtract_numbers(request.num1, request.num2)
            return SubtractionResponse(result=result)
        except TypeError as e:
            return SubtractionResponse(result=0, error=str(e), success=False)
        except Exception as e:
            return SubtractionResponse(result=0, error="An unexpected error occurred", success=False)

class SubtractionHTTPHandler(BaseHTTPRequestHandler):
    """
    HTTP handler for web interface subtraction operations.
    """
    
    def __init__(self, *args, **kwargs):
        self.subtraction_handler = SubtractionHandler()
        super().__init__(*args, **kwargs)
    
    def do_GET(self):
        """Handle GET requests (serve the web form)."""
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            
            html_content = self._generate_html_form()
            self.wfile.write(html_content.encode())
        else:
            self.send_error(404, "Not Found")
    
    def do_POST(self):
        """Handle POST requests (process subtraction)."""
        if self.path == '/subtract':
            # Parse form data
            content_type, pdict = cgi.parse_header(self.headers['content-type'])
            
            if content_type == 'multipart/form-data':
                post_vars = cgi.parse_multipart(self.rfile, pdict)
            elif content_type == 'application/x-www-form-urlencoded':
                length = int(self.headers['content-length'])
                post_vars = cgi.parse_qs(self.rfile.read(length).decode(), keep_blank_values=1)
            else:
                post_vars = {}
            
            # Extract and validate inputs
            num1_str = post_vars.get('num1', [''])[0]
            num2_str = post_vars.get('num2', [''])[0]
            
            num1 = self.subtraction_handler.validator.validate_input(num1_str)
            num2 = self.subtraction_handler.validator.validate_input(num2_str)
            
            if num1 is None or num2 is None:
                self._send_error_response("Invalid input. Please enter valid numbers.")
                return
            
            # Process subtraction
            request = SubtractionRequest(num1=num1, num2=num2)
            response = self.subtraction_handler.process_subtraction(request)
            
            if response.success:
                self._send_success_response(response.result)
            else:
                self._send_error_response(response.error)
        else:
            self.send_error(404, "Not Found")
    
    def _generate_html_form(self) -> str:
        """Generate HTML form for subtraction calculator."""
        return f"""
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Subtraction Calculator</title>
            <style>
                body {{
                    font-family: Arial, sans-serif;
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                    background-color: #f4f4f4;
                }}
                .calculator {{
                    background: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                }}
                h1 {{
                    color: #333;
                    text-align: center;
                }}
                .input-group {{
                    margin-bottom: 20px;
                }}
                label {{
                    display: block;
                    margin-bottom: 5px;
                    font-weight: bold;
                    color: #555;
                }}
                input[type="number"] {{
                    width: 100%;
                    padding: 12px;
                    border: 2px solid #ddd;
                    border-radius: 5px;
                    font-size: 16px;
                    box-sizing: border-box;
                }}
                input[type="number"]:focus {{
                    border-color: #4CAF50;
                    outline: none;
                }}
                button {{
                    background-color: #4CAF50;
                    color: white;
                    padding: 12px 24px;
                    border: none;
                    border-radius: 5px;
                    cursor: pointer;
                    font-size: 16px;
                    width: 100%;
                }}
                button:hover {{
                    background-color: #45a049;
                }}
                .result {{
                    margin-top: 20px;
                    padding: 15px;
                    background-color: #e8f5e8;
                    border-radius: 5px;
                    text-align: center;
                    font-size: 18px;
                    font-weight: bold;
                }}
                .error {{
                    margin-top: 20px;
                    padding: 15px;
                    background-color: #ffebee;
                    border-radius: 5px;
                    text-align: center;
                    color: #c62828;
                }}
                @media (max-width: 480px) {{
                    .calculator {{
                        padding: 20px;
                    }}
                    input[type="number"] {{
                        padding: 10px;
                    }}
                    button {{
                        padding: 10px 20px;
                    }}
                }}
            </style>
        </head>
        <body>
            <div class="calculator">
                <h1>Subtraction Calculator</h1>
                <form method="POST" action="/subtract">
                    <div class="input-group">
                        <label for="num1">First Number (Minuend):</label>
                        <input type="number" id="num1" name="num1" step="any" required>
                    </div>
                    <div class="input-group">
                        <label for="num2">Second Number (Subtrahend):</label>
                        <input type="number" id="num2" name="num2" step="any" required>
                    </div>
                    <button type="submit">Subtract</button>
                </form>
                <div id="result"></div>
            </div>
            
            <script>
                // Handle form submission with AJAX for better user experience
                document.querySelector('form').addEventListener('submit', async function(e) {{
                    e
# Code truncated at 10000 characters